[Node {tok = CL Class, children = [Leaf {leaf = ID "Main"},Node {tok = ID "main", children = [Node {tok = AS (), children = [Node {tok = ID "p0", children = [Leaf {leaf = VT "Player"}]},Node {tok = ID "p1", children = [Leaf {leaf = VT "Player"}]},Node {tok = ID "pos", children = [Leaf {leaf = VT "int"}]},Node {tok = ID "game", children = [Leaf {leaf = VT "Board"}]},Node {tok = ID "c", children = [Leaf {leaf = VT "char"}]},Node {tok = ID "cp", children = [Leaf {leaf = VT "int"}]},Node {tok = ID "notOver", children = [Leaf {leaf = VT "boolean"}]},Node {tok = DO Do, children = [Node {tok = FN "Output.printInt", children = [Leaf {leaf = I 5}]}]},Node {tok = LET Let, children = [Leaf {leaf = ID "p0"},Node {tok = FN "Player.new", children = []}]},Node {tok = LET Let, children = [Leaf {leaf = ID "p1"},Node {tok = FN "Player.new", children = []}]},Node {tok = LET Let, children = [Leaf {leaf = ID "game"},Node {tok = FN "Board.new", children = [Leaf {leaf = ID "p0"},Leaf {leaf = ID "p1"}]}]},Node {tok = LET Let, children = [Leaf {leaf = ID "notOver"},Leaf {leaf = BL -1}]},Node {tok = WH While, children = [Leaf {leaf = ID "notOver"},Node {tok = DO Do, children = [Node {tok = FN "Output.printString", children = [Leaf {leaf = S "Player "}]}]},Node {tok = LET Let, children = [Leaf {leaf = ID "cp"},Node {tok = FN "game.getCurrentPlayer", children = []}]},Node {tok = DO Do, children = [Node {tok = FN "Output.printInt", children = [Leaf {leaf = ID "cp"}]}]},Node {tok = LET Let, children = [Leaf {leaf = ID "pos"},Node {tok = FN "game.askNextMove", children = []}]},Node {tok = DO Do, children = [Node {tok = FN "game.updateBoard", children = [Leaf {leaf = ID "pos"}]}]},Node {tok = IF If, children = [Node {tok = FN "game.isOver", children = []},Node {tok = LET Let, children = [Leaf {leaf = ID "notOver"},Leaf {leaf = BL 0}]}]},Node {tok = DO Do, children = [Node {tok = FN "game.changePlayers", children = []}]}]},Node {tok = DO Do, children = [Node {tok = FN "Output.printString", children = [Leaf {leaf = S "game over!"}]}]},Node {tok = DO Do, children = [Node {tok = FN "p0.dispose", children = []}]},Node {tok = DO Do, children = [Node {tok = FN "p1.dispose", children = []}]},Node {tok = DO Do, children = [Node {tok = FN "game.dispose", children = []}]},Node {tok = RE Return, children = []}]}]}]},SymbolTable {_1 = [fromList [("c",Var {varScope = local, varType = "char"}),("cp",Var {varScope = local, varType = "int"}),("game",Var {varScope = local, varType = "Board"}),("notOver",Var {varScope = local, varType = "boolean"}),("p0",Var {varScope = local, varType = "Player"}),("p1",Var {varScope = local, varType = "Player"}),("pos",Var {varScope = local, varType = "int"})]], _2 = [fromList [("main",Fun {funType = Function, retType = "void"})]]}]
